from __future__ import division

class SentiWordNet():
    def __init__(self,netpath):
        self.netpath = netpath
    self.dictionary = {}
    
    def infoextract(self):
    tempdict = {}
    templist = []
        try:
            f = open(self.netpath,"r")
        except IOError:
            print "failed to open file!"
            exit()
        print 'start extracting.......'
        
    # Example line:
    # POS     ID     PosS  NegS SynsetTerm#sensenumber Desc
    # a   00009618  0.5    0.25  spartan#4 austere#3 ascetical#2  ……

        for sor in f.readlines():
            if sor.strip().startswith("#"):
                pass
            else:
                data = sor.split("\t")
                if len(data) != 6:
                    print 'invalid data'
                    break
                wordTypeMarker = data[0]      
                synsetScore = float(data[2]) - float(data[3])   #// Calculate synset score as score = PosS - NegS
                synTermsSplit = data[4].split(" ")    # word#sentimentscore
        for w in synTermsSplit:
            synTermAndRank = w.split("#")           #
            synTerm = synTermAndRank[0] + "#" + wordTypeMarker    #单词#词性
            synTermRank = int(synTermAndRank[1])    
            if  tempdict.has_key(synTerm):
            t = [synTermRank,synsetScore]
            tempdict.get(synTerm).append(t)            
            else:
            temp = {synTerm:[]}
            t = [synTermRank,synsetScore]
            temp.get(synTerm).append(t)
            tempdict.update(temp)            
            
    for key in tempdict.keys():
        score = 0.0
        ssum = 0.0            
        for wordlist in tempdict.get(key):
        score += wordlist[1]/wordlist[0]
        ssum += 1.0/wordlist[0]
        score /= ssum
        self.dictionary.update({key:score})
    
    def getscore(self,word,pos):
    return self.dictionary.get(word + "#" + pos)
        
            
            
                
if __name__ == '__main__':
    netpath = "C:\\Users\\Administrator\\Desktop\\SentiWordNet.txt"
    swn= SentiWordNet(netpath)
    swn.infoextract()
    print "good#a "+str(swn.getscore('good','a'))
    print "bad#a "+str(swn.getscore('bad','a'))
    print "blue#a "+str(swn.getscore('blue','a'))
    print "blue#a "+str(swn.getscore('blue','n'))
